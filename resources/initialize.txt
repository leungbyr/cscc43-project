CREATE TABLE IF NOT EXISTS Users (sin CHAR(9) PRIMARY KEY, username CHAR(20), password CHAR(20), name CHAR(20), address CHAR(30), birthdate DATE, occupation CHAR(20));
CREATE TABLE IF NOT EXISTS Listings (lat REAL, lon REAL, address CHAR(30), postal CHAR(6), city CHAR(20), country CHAR(20), type CHAR(10), PRIMARY KEY(lat, lon));
CREATE TABLE IF NOT EXISTS Card (number CHAR(16) PRIMARY KEY, expiry DATE, cvv INT);
CREATE TABLE IF NOT EXISTS Comments (id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, date DATETIME, text TEXT, rating INT);
CREATE TABLE IF NOT EXISTS Offers (lat REAL, lon REAL, name CHAR(16), PRIMARY KEY(lat, lon, name), FOREIGN KEY (lat, lon) REFERENCES Listings(lat, lon) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS Hosted_by (sin CHAR(9), lat REAL, lon REAL, PRIMARY KEY(lat, lon), FOREIGN KEY (sin) REFERENCES Users(sin) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY (lat, lon) REFERENCES Listings(lat, lon) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS Has_rented (sin CHAR(9), lat REAL, lon REAL, date DATE, price REAL, canceled BIT, PRIMARY KEY(sin, lat, lon, date), FOREIGN KEY (sin) REFERENCES Users(sin) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY (lat, lon) REFERENCES Listings(lat, lon) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS Available_on (lat REAL, lon REAL, date DATE, price REAL, removed BIT, PRIMARY KEY (lat, lon, date, price), FOREIGN KEY (lat, lon) REFERENCES Listings(lat, lon) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS Pays_with (number CHAR(16) PRIMARY KEY, sin CHAR(9), FOREIGN KEY (number) REFERENCES Card(number) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY(sin) REFERENCES Users(sin) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS Posted_on_listing (id INT PRIMARY KEY, lat REAL, lon REAL, FOREIGN KEY (id) REFERENCES Comments(id) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY (lat, lon) REFERENCES Listings(lat, lon) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS Posted_on_profile (id INT PRIMARY KEY, sin CHAR(9), FOREIGN KEY (id) REFERENCES Comments(id) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY(sin) REFERENCES Users(sin) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS Posted_by (id INT, sin CHAR(9), PRIMARY KEY(id, sin), FOREIGN KEY (id) REFERENCES Comments(id) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY(sin) REFERENCES Users(sin) ON UPDATE CASCADE ON DELETE CASCADE);